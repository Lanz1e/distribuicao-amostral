
//import static javax.swing.GroupLayout.Alignment.values;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Lucas
 */
public class MediaAmostra extends javax.swing.JFrame {

    /**
     * Creates new form MediaAmostra
     */
    int pos;
    int amostras;
    double total,total2;
    double amount,amount2;
    double totalCol;
    double totalLin;
    double mediaProcesso;
    double xi;
    double desvioXi;
    
    public MediaAmostra() {
        initComponents();
        tblMedia.setShowGrid(false);
        tblMedia.setShowVerticalLines(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblMedia = new javax.swing.JTable();
        btnLinha = new javax.swing.JButton();
        btnColuna = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        btnCalcular = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnAmostral = new javax.swing.JButton();
        lblMediaProcesso = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnDesvioMediaProcesso = new javax.swing.JButton();
        btnDesvioPadrao = new javax.swing.JButton();
        btnVariancia = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblMedia.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblMedia.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblMedia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Amostras", "Média"
            }
        ));
        tblMedia.setGridColor(new java.awt.Color(0, 0, 0));
        tblMedia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tblMediaKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(tblMedia);

        btnLinha.setText("+L");
        btnLinha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLinhaActionPerformed(evt);
            }
        });

        btnColuna.setText("+C");
        btnColuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColunaActionPerformed(evt);
            }
        });

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnCalcular.setText("Calcular Média");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        jLabel1.setText("Confirme o último número com o ENTER antes de calcular!");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("DISTRIBUIÇÃO DA MÉDIA AMOSTRAL");
        jLabel2.setToolTipText("");

        btnAmostral.setText("Cálculo Amostral");
        btnAmostral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAmostralActionPerformed(evt);
            }
        });

        lblMediaProcesso.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblMediaProcesso.setText("0.0");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Média:");

        btnDesvioMediaProcesso.setText("Calcular desvio em relação à Média");
        btnDesvioMediaProcesso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesvioMediaProcessoActionPerformed(evt);
            }
        });

        btnDesvioPadrao.setText("Calcular desvio-padrão");
        btnDesvioPadrao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesvioPadraoActionPerformed(evt);
            }
        });

        btnVariancia.setText("Variância");
        btnVariancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVarianciaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnLinha, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnColuna)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAmostral)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCalcular)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimpar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 122, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblMediaProcesso))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnVariancia)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDesvioPadrao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDesvioMediaProcesso)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMediaProcesso)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDesvioMediaProcesso)
                            .addComponent(btnDesvioPadrao)
                            .addComponent(btnVariancia))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimpar)
                    .addComponent(btnCalcular)
                    .addComponent(btnColuna)
                    .addComponent(btnLinha)
                    .addComponent(jLabel1)
                    .addComponent(btnAmostral)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnLinhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLinhaActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblMedia.getModel();
        model.setNumRows(model.getRowCount()+1);
        tblMedia.setModel(model);
        tblMedia.setValueAt(amostras+1, amostras, 0);
        amostras++;
    }//GEN-LAST:event_btnLinhaActionPerformed

    private void btnColunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColunaActionPerformed
        DefaultTableModel model = (DefaultTableModel)tblMedia.getModel();
        TableColumn col = new TableColumn(model.getColumnCount());
        pos++;
        String headerLabel="X"+pos;
        col.setHeaderValue(headerLabel);
        tblMedia.addColumn(col);
        model.addColumn(headerLabel.toString());
        tblMedia.moveColumn(1, tblMedia.getColumnCount()-1);
    }//GEN-LAST:event_btnColunaActionPerformed

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        for(int l = 0; l < tblMedia.getRowCount(); l++){
            total = 0;
            for(int c = 1; c < tblMedia.getColumnCount()-1; c++){
                if((tblMedia.getValueAt(l, c)==null)||(tblMedia.getValueAt(l, c).toString().equals(""))){
                    continue;
                }
                else{
                    try{
                        amount=Double.parseDouble(tblMedia.getValueAt(l, c).toString());
                        total = amount+total;
                        totalCol++;
                    }
                    catch(NumberFormatException e){
                        JOptionPane.showMessageDialog(null, "Dado inválido encontrado!\nVerifique os dados inseridos na linha: "+(l+1)+", coluna: X"+c+"\nOBS: O cálculo ainda será feito, porém, ignorando os dados inválidos.","AVISO",JOptionPane.WARNING_MESSAGE);
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null, "Ocorreu algum erro com o cálculo!","ERRO",JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
            tblMedia.setValueAt(total/totalCol, l, tblMedia.getColumnCount()-1);
            totalCol=0;
        }
        //MEDIA PROCESSO
        total2 = 0;
        mediaProcesso=0;
        totalLin=0;
        for(int i = 0; i < tblMedia.getRowCount(); i++){
            if(tblMedia.getValueAt(i, tblMedia.getColumnCount()-1).toString().equals("NaN"))
                continue;
            else{
                amount2=Double.parseDouble(tblMedia.getValueAt(i, tblMedia.getColumnCount()-1).toString());
                total2 = amount2+total2;
                totalLin++;
            }
        }
        mediaProcesso=total2/totalLin;
        lblMediaProcesso.setText(mediaProcesso+"");
    }//GEN-LAST:event_btnCalcularActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog (null, "Tem certeza disso?\nLimpar irá apagar todas as linhas e colunas!","LIMPAR",JOptionPane.WARNING_MESSAGE);
        if(dialogResult == JOptionPane.YES_OPTION){  
            new MediaAmostra().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnAmostralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAmostralActionPerformed
        new Proporcao().setVisible(true);
        //this.dispose();
    }//GEN-LAST:event_btnAmostralActionPerformed

    private void btnDesvioMediaProcessoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesvioMediaProcessoActionPerformed
        if(lblMediaProcesso.getText().equals("0.0")||lblMediaProcesso.getText().equals("NaN"))
            JOptionPane.showMessageDialog(null, "A média do processo não pode ser 0!\nFaça algum cálculo antes.","AVISO",JOptionPane.WARNING_MESSAGE);
        else{
            //CALCULAR DESVIO
            xi=0;
            String result="";
            for(int l = 0; l < tblMedia.getRowCount(); l++){
                total = 0;
                result="";
                for(int c = 1; c < tblMedia.getColumnCount()-1; c++){
                    if((tblMedia.getValueAt(l, c)==null)||(tblMedia.getValueAt(l, c).toString().equals(""))){
                        continue;
                    }
                    else{
                        try{
                            xi=Double.parseDouble(tblMedia.getValueAt(l, c).toString());
                            desvioXi=(xi-mediaProcesso)*(xi-mediaProcesso);
                            result=result+"Subgrupo: "+(l+1)+" | Cálculo: ("+tblMedia.getValueAt(l, c)+" - "+mediaProcesso+")² | Resultado: "+desvioXi+"\n";
                        }
                        catch(NumberFormatException e){

                        }
                        catch(Exception e){
                            JOptionPane.showMessageDialog(null, "Ocorreu algum erro com o cálculo!","ERRO",JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }
                JOptionPane.showMessageDialog(null, "Resultado da operação:\n"+result);
            }
        }   
    }//GEN-LAST:event_btnDesvioMediaProcessoActionPerformed

    private void btnDesvioPadraoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesvioPadraoActionPerformed
        if(lblMediaProcesso.getText().equals("0.0")||lblMediaProcesso.getText().equals("NaN"))
            JOptionPane.showMessageDialog(null, "A média do processo não pode ser 0!\nFaça algum cálculo antes.","AVISO",JOptionPane.WARNING_MESSAGE);
        else{
            //CALCULAR DESVIO
            xi=0;
            double result=0.0;
            double totAmostras=0.0;
            for(int l = 0; l < tblMedia.getRowCount(); l++){
                total = 0;
                for(int c = 1; c < tblMedia.getColumnCount()-1; c++){
                    if((tblMedia.getValueAt(l, c)==null)||(tblMedia.getValueAt(l, c).toString().equals(""))){
                        continue;
                    }
                    else{
                        try{
                            xi=Double.parseDouble(tblMedia.getValueAt(l, c).toString());
                            desvioXi=(xi-mediaProcesso)*(xi-mediaProcesso);
                            result=result+desvioXi;
                            totAmostras++;
                        }
                        catch(NumberFormatException e){

                        }
                        catch(Exception e){
                            JOptionPane.showMessageDialog(null, "Ocorreu algum erro com o cálculo!","ERRO",JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }
            }
            double variancia=result/(totAmostras-1);
            JOptionPane.showMessageDialog(null, "Desvio-padrão:\n"+Math.sqrt(variancia));
        }   
    }//GEN-LAST:event_btnDesvioPadraoActionPerformed

    private void btnVarianciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVarianciaActionPerformed
        if(lblMediaProcesso.getText().equals("0.0")||lblMediaProcesso.getText().equals("NaN"))
            JOptionPane.showMessageDialog(null, "A média do processo não pode ser 0!\nFaça algum cálculo antes.","AVISO",JOptionPane.WARNING_MESSAGE);
        else{
            //CALCULAR VARIANCIA
            xi=0;
            double result=0.0;
            double totAmostras=0.0;
            for(int l = 0; l < tblMedia.getRowCount(); l++){
                total = 0;
                for(int c = 1; c < tblMedia.getColumnCount()-1; c++){
                    if((tblMedia.getValueAt(l, c)==null)||(tblMedia.getValueAt(l, c).toString().equals(""))){
                        continue;
                    }
                    else{
                        try{
                            xi=Double.parseDouble(tblMedia.getValueAt(l, c).toString());
                            desvioXi=(xi-mediaProcesso)*(xi-mediaProcesso);
                            result=result+desvioXi;
                            totAmostras++;
                        }
                        catch(NumberFormatException e){

                        }
                        catch(Exception e){
                            JOptionPane.showMessageDialog(null, "Ocorreu algum erro com o cálculo!","ERRO",JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }
            }
            JOptionPane.showMessageDialog(null, "Variância:\n"+(result/(totAmostras-1.0)));
        }
    }//GEN-LAST:event_btnVarianciaActionPerformed

    private void tblMediaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblMediaKeyTyped
        char c = evt.getKeyChar();
        
        if((c == ',')){
            evt.setKeyChar('.');
        }
        else if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE) || (c == '.') || (c == KeyEvent.VK_TAB))) {
            evt.consume();
        }
    }//GEN-LAST:event_tblMediaKeyTyped
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MediaAmostra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MediaAmostra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MediaAmostra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MediaAmostra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MediaAmostra().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAmostral;
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnColuna;
    private javax.swing.JButton btnDesvioMediaProcesso;
    private javax.swing.JButton btnDesvioPadrao;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnLinha;
    private javax.swing.JButton btnVariancia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMediaProcesso;
    private javax.swing.JTable tblMedia;
    // End of variables declaration//GEN-END:variables
}
